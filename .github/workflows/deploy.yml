name: Deploy Static HTML Site and app.py

on:
  push:
    branches: [ main ]          # ← runs when you push to main
    # paths:                     # (optional) uncomment to limit when it runs
    #   - "**/*.html"
    #   - "**/*.css"
    #   - "**/*.js"
    #   - "app.py"
  workflow_dispatch:             # ← still allow manual runs

concurrency:
  group: deploy-${{ github.ref }}
  cancel-in-progress: true

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      REMOTE_USER: ${{ secrets.REMOTE_USER }}
      REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
      GUNICORN_SERVICE: ${{ secrets.GUNICORN_SERVICE }}

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Prepare SSH + rsync repo to remote staging (~/.deploy_tmp)
        run: |
          set -euo pipefail
          mkdir -p "$HOME/.ssh"
          printf '%s\n' "${{ secrets.SSH_PRIVATE_KEY }}" > "$HOME/.ssh/id_rsa"
          chmod 600 "$HOME/.ssh/id_rsa"
          printf '%s\n' "${{ secrets.KNOWN_HOSTS }}" > "$HOME/.ssh/known_hosts"
          chmod 644 "$HOME/.ssh/known_hosts"

          RSYNC_SSH="ssh -i $HOME/.ssh/id_rsa -o StrictHostKeyChecking=yes"
          rsync -az --delete \
            --exclude ".git" \
            --exclude ".github" \
            --exclude "keyfile" \
            --exclude "README.md" \
            --exclude "site.tar.gz" \
            --exclude "deploy.sh" \
            -e "$RSYNC_SSH" ./ "$REMOTE_USER@$REMOTE_HOST:~/.deploy_tmp/"

      - name: Promote staging → /usr/share/nginx/html (sudo) + reload nginx
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            set -eo pipefail
            TMP="$HOME/.deploy_tmp"
            sudo mkdir -p /usr/share/nginx/html
            sudo rsync -a --delete "$TMP"/ /usr/share/nginx/html/
            # Ensure fallback error pages exist
            sudo bash -lc '[ -f /usr/share/nginx/html/404.html ] || echo "<h1>Not Found</h1>" > /usr/share/nginx/html/404.html'
            sudo bash -lc '[ -f /usr/share/nginx/html/50x.html ] || echo "<h1>Error</h1>" > /usr/share/nginx/html/50x.html'
            # Ownership/SELinux (SELinux restorecon is a no-op if not present)
            sudo chown -R nginx:nginx /usr/share/nginx/html
            sudo restorecon -R /usr/share/nginx/html 2>/dev/null || true
            # Reload nginx
            sudo systemctl reload nginx || true
            echo "Live dir (top 40):"
            sudo ls -la /usr/share/nginx/html | head -n 40

      # Optional: restart gunicorn if you deploy a backend there too
      - name: Restart Gunicorn
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.REMOTE_HOST }}
          username: ${{ secrets.REMOTE_USER }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          script: |
            sudo systemctl restart ${{ secrets.GUNICORN_SERVICE }}

