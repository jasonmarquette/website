---
name: Deploy Static HTML Site and app.py (Tar + SCP)

on:
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Deploy using Tar + SCP
        run: |
          mkdir -p "$HOME/.ssh"
          echo "$KNOWN_HOSTS" > "$HOME/.ssh/known_hosts"
          chmod 644 "$HOME/.ssh/known_hosts"

          eval "$(ssh-agent -s)"
          echo "$SSH_PRIVATE_KEY" | ssh-add -

          echo "âœ… Testing SSH connection..."
          ssh -o StrictHostKeyChecking=yes "$REMOTE_USER@$REMOTE_HOST" "echo SSH connection successful"

          echo "ðŸ“¦ Creating site archive..."
          tar --warning=no-file-changed \
              --exclude=".git" \
              --exclude=".github" \
              --exclude="keyfile" \
              --exclude="app.py" \
              --exclude="site.tar.gz" \
              -czf site.tar.gz . || true

          echo "ðŸ“¤ Uploading archive via SCP..."
          scp -o StrictHostKeyChecking=yes -o IdentitiesOnly=yes site.tar.gz \
            "$REMOTE_USER@$REMOTE_HOST:/home/$REMOTE_USER/site.tar.gz"

          echo "ðŸ“‚ Extracting on remote server..."
          ssh -o StrictHostKeyChecking=yes "$REMOTE_USER@$REMOTE_HOST" \
            "mkdir -p '$REMOTE_PATH' && tar -xzf /home/$REMOTE_USER/site.tar.gz -C '$REMOTE_PATH' && rm /home/$REMOTE_USER/site.tar.gz"

          echo "ðŸš€ Deploying app.py..."
          scp -o StrictHostKeyChecking=yes -o IdentitiesOnly=yes ./app.py \
            "$REMOTE_USER@$REMOTE_HOST:/home/$REMOTE_USER/app.py"

          echo "ðŸ“‚ Setting permissions and verifying deployment..."
          ssh -o StrictHostKeyChecking=yes "$REMOTE_USER@$REMOTE_HOST" \
            "chmod 755 /home/$REMOTE_USER/app.py && sync && echo 'âœ… Deployment complete:' && ls -la '$REMOTE_PATH' && ls -la /home/$REMOTE_USER/app.py"

        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          KNOWN_HOSTS: ${{ secrets.KNOWN_HOSTS }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_PATH: ${{ secrets.REMOTE_PATH }}
